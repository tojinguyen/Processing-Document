---
version: '3.8'
services:
  db:
    image: postgres:15
    container_name: ocr_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dennis}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tojidev}
      POSTGRES_DB: ${POSTGRES_DB:-ocr_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U dennis -d ocr_db
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ocr_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test:
        - CMD
        - rabbitmq-diagnostics
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    container_name: ocr_redis
    ports:
      - ${REDIS_PORT:-6379}
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio:RELEASE.2023-09-07T02-05-02Z
    container_name: ocr_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9000/minio/health/live
      interval: 10s
      timeout: 5s
      retries: 5
  web-api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/app/app
    ports:
      - 8000:8000
    environment:
      POSTGRES_DB: ocr_db
      POSTGRES_USER: dennis
      POSTGRES_PASSWORD: tojidev
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: ocr-files
      MINIO_USE_SSL: 'False'
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
volumes:
  postgres_data:
  minio_data:
